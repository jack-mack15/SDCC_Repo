#parametro che impatta la exponential moving average per l'aggiornamento della distanza dei nodi
#p=0.0, il valore corrente resetta il valore precedente della distanza
#p=1.0, il valore corrente non altera il valore della distanza del nodo
#p=0.5, media aritmetica tra valore precedente e corrente
#valore compreso tra 0 e 1
p=0.5


#RTT espresso in millisecondi di default per nodi di cui non si conosce la distanza
#valore compreso tra 0 e 1000
def_RTT=500

#parametro che indica il moltiplicatore per il calcolo del timer dell'heartbeat. viene moltiplicato
#al precedente tempo di risposta del nodo da contattare
#float positivo
rtt_mult=3.0

#tempo in millisecondi tra due iterazioni di invio di heartbeat
hb_delay=8000

#numero di nodi che un singolo nodo può contattare ad ogni iterazione
#questo parametro non si riferisce ai parametri di gossip, ma alla diffusione degli heartbeat
#num=0 indica che si prende la radice quadrata del numero di nodi che il nodo conosce
#num=-1 indica che si contattano tutti i nodi che si conosce
num=1

#tipologia di gossip scelta per la comunicazione dei nodi
#gossipType=1 significa usare bimodal multicast
#gossipType=2 significa usare blind counter rumor mongering
gossip_type=1

#intervallo (in millisecondi) tra iterazioni di blind counter gossip per lo stesso update
#intero positivo
gossip_interval=2000

#parametro B del blind rumor mongering, indica il numero massimo di nodi vicini
#a cui si inoltra un update. deve essere un intero positivo
max_neighbour=2

#parametro F del blind rumor mongering, indica quante volte un update viene inoltrato
#ai nodi vicini. deve essere un intero positivo.
#si B che F vengono opportunamente gestiti per evitare errori
max_iter=2

#parametro che indica quanti retry massimi bisogna effettuare prima di assumere un nodo sia fault
#un intero maggiore di 0
max_retry=1

#parametro che stabilisce se usare il max tra tempo di risposta attuale e quello precedente
#tempo di risposta di un nodo contattato
#posto a 1 indica che si usa il max, 0 non si usa il max
using_max=1

#parametro che indica il numero massimo di tentativi per rianimare un nodo con la funzione lazzarus
#situazione in cui il nodo possiede una lista di nodi attiva vuota e lista di nodi fault non vuota
#intero positivo
lazzarus_try=3

#intervallo di tempo in millisecondi tra due lazzarusTry, in caso il primo fallisse
#intero positivo
lazzarus_time=8000

#porta del registry, deve combaciare con quella specificata nel docker compose file
sd_port=8080

#numero di tentativi massimo che un nodo può effettuare per ottenere una risposta dal service registry
#intero positivo
sd_retry=10

#porta su cui si mette in ascolto il seguente nodo, deve combaciare con quella specificata nel dock comp file
my_port=8081